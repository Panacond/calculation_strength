# python3
# расчет по приложению Ж для подстановки в другие расчеты
import string_calculation

def function(list_number):
    '''подать список занчений из 10 позиций'''
    if len(list_number) !=10:
        print(len(list_number))
        warning = 'не то количество данных'
        return warning, warning
    for i in list_number:
        try:
            i = float(i)
        except:
            warning = 'не цифры ' + str(i)
            return warning, warning
    txt = string_calculation.Calc()
    t = '''Пролет балки составляет (м):
L={0[0]}
Высота сечения (см):
h_0={0[1]}
Ширина сечения (см):
b={0[2]}
Толщина полки (см):
t_p={0[3]}
Толщина стенки (см):
t_s={0[4]}
Расчетное сопротивление (кгс/см^2):
R_y={0[5]}
Число закреплений сжатого пояса:
n_z={0[6]}
Модуль упругости (кгс/см^2):
E={0[7]}
Моменты инерции (см^4):
I_x={0[8]}
I_y={0[9]}
исходные данные'''
    t=t.format(list_number)
    txt.c1(t)
    t='''
8.4 Расчет на общую устойчивость изгибаемых элементов сплошного сечения
Определение коэффициента устойчивости при изгибе \phi_b (Приложение Ж)
Коэффициент \\alpha_, для составных двутавров из листов, со сварными или 
фрикционными поясными соединениями (Ж.4):
Расчетную длину пролета принимаем (м):
L_ef=L/(n_z+1)
a=8*((L_ef*100*t_p)/(h_0*b))**2*(1+(0.5*(h_0-2*t_p)*t_s**3)/(b*t_p**3))
Определение коэффициента \Psi  по формулам таблицы Ж.1
'''
    txt.c1(t,50)
    if txt.numer['n_z']==0:
        if txt.numer['a']>40:
            t='''При значениях а больших 40 и нагрузке приложенной к сжатому поясу коэффициент составит:
\Psi=3.15+0.04*a-2.7*10**(-5)*a**2'''
        else:
            t='''При значениях а меньших 40 и нагрузке приложенной к сжатому поясу коэффициент составит:
\Psi=1.6+0.08*a'''
    elif txt.numer['n_z']==1:
        if txt.numer['a']>40:
            t='''При значениях а больших 40 и нагрузке приложенной к сжатому поясу коэффициент составит:
\Psi_1=3.6+0.04*a-3.5*10**(-5)*a**2'''
        else:
            t='''При значениях а меньших 40 и нагрузке приложенной к сжатому поясу коэффициент составит:
\Psi_1=2.25+0.07*a'''
        txt.c1(t)
        t='''
Равномерное распределенная нагрузка при одном закреплении в средине пролета:
\Psi=1.14*\Psi_1'''
    else:
        if txt.numer['a']>40:
            t='''При значениях а больших 40 и нагрузке приложенной к сжатому поясу коэффициент составит:
\Psi=3.6+0.04*a-3.5*10**(-5)*a**2'''
        else:
            t='''При значениях а меньших 40 и нагрузке приложенной к сжатому поясу коэффициент составит:
\Psi=2.25+0.07*a'''
    txt.c1(t)
    t='''\nЗначение коэффициента вычисляются по формуле (Ж.3):
\\varphi_1=\Psi*I_y/I_x*(h_0/(L_ef*100))**2*E/R_y
Ж.2 Для балки и консоли двутаврового сечения с двумя осями симметрии 
коэффициент \phi_b следует принимать равным:
'''
    txt.c1(t)
    if txt.numer['\\varphi_1']>0.85:
        t='''
При значениях  \\varphi_1 > 0.85:
\\varphi_b=0.68+0.21*\\varphi_1'''
    else:
        t='''
При значениях  \\varphi_1 < 0.85:
\\varphi_b=\\varphi_1'''
    txt.c1(t, 60)
    if txt.numer['\\varphi_1'] > 1:
        t ='''
При значениях \\varphi_1 > 1:
\\varphi_b=1'''
        txt.c1(t)
    text_file = txt.rezult
    text_file=text_file.split('исходные данные')[-1]
    test = txt.numer['\\varphi_b']
    return text_file, test

def list_input(input_list, txt):
    '''получения списка нужных значений из переменных'''
    input_list=input_list.split(',')
    list_numer=[]
    for i in input_list:
        list_numer.append(txt.numer[i])
    return list_numer

def main1():
    list_numer=[12,16,6.4,0.84,0.5,2450,2,2060000,740.76,36.85]
    text_file, test = function(list_numer)
    # print(text_file)
    print(test)

def main2():
    txt = string_calculation.Calc()
    # print(text_file)
    t = '''Пролет балки составляет (м):
L=5.1
Высота сечения (см):
h_0=30
Ширина сечения (см):
b=30
Толщина полки (см):
t_p=1.5
Толщина стенки (см):
t_s=1
Расчетное сопротивление (кгс/см^2):
R_y=2450
Число закреплений сжатого пояса:
n_z=2
Модуль упругости (кгс/см^2):
E=2000000
Моменты инерции (см^4):
I_x=19932.75
I_y=6752.25
исходные данные'''
    txt.c1(t)
    input_list='L,h_0,b,t_p,t_s,R_y,n_z,E,I_x,I_y'
    list_numer = list_input(input_list, txt)
    text_file, test = function(list_numer)
    txt.c1(text_file)
    text_file1 = txt.rezult
    print(text_file1)
    print(test)

if __name__ == '__main__':
    main1()
    main2()